#BlueJ class context
comment0.params=
comment0.target=Employee()
comment0.text=\r\n\ Employee\ \ Default\ Constructor\r\n\ Sets\ name\ to\ be\ "No\ name"\r\n\ Sets\ staff\ number\ to\ "Unallocated"\r\n\r\n
comment1.params=name
comment1.target=Employee(java.lang.String)
comment1.text=\r\n\ Employee\ Constructor\r\n\ name\ is\ not\ null\ \r\n\ will\ use\ staffNo\ to\ generate\ the\ 'next'\ staff\ number\r\n\r\n\ @param\ theName\ of\ the\ employee,\ may\ not\ be\ null\r\n\ \r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ gets\ the\ employees\ name\r\n\r\n\ @return\ name\r\n
comment3.params=newName
comment3.target=void\ setName(java.lang.String)
comment3.text=\r\n\ sets\ the\ name\ of\ an\ employee\r\n\ \r\n\ @param\ newName\ the\ employee's\ new\ name\r\n
comment4.params=
comment4.target=java.lang.String\ getStaffNumber()
comment4.text=\r\ngets\ the\ employee's\ staff\ number\r\n\r\n\ @return\ the\ staff\ number\r\n
comment5.params=
comment5.target=void\ generateStaffNumber()
comment5.text=\r\n\ generates\ a\ new\ staff\ number\r\n\ the\ name\ may\ not\ be\ null\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ the\ toString\ method\r\n\ \r\n\ @return\ the\ employee\ data\r\n
comment7.params=other
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\r\n\ checks\ for\ equality\r\n\ Two\ employees\ are\ equal\ if\ \r\n\ \ \ if\ they\ are\ instances\ of\ Employyee\ or\ a\ subtype\r\n\ \ \ they\ have\ the\ same\ name\r\n\ \ \ and\ also\ the\ same\ staff\ number\r\n\r\n\ @param\ other\ the\ employee\ object\ for\ comparison\r\n\ @return\ true\ if\ equal\ otherwise\ false\r\n
comment8.params=
comment8.target=double\ getPay()
numComments=9
